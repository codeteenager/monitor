import{_ as t,o as a,c as n,C as e,a as o}from"./chunks/framework.4810a3e9.js";const b=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"miniapp/index.md","filePath":"miniapp/index.md","lastUpdated":1687777284000}'),s={name:"miniapp/index.md"},i=e("h1",{id:"介绍",tabindex:"-1"},[o("介绍 "),e("a",{class:"header-anchor",href:"#介绍","aria-label":'Permalink to "介绍"'},"​")],-1),d=e("p",null,"小程序开发和 Web 端有一个比较明显的不同就是小程序相对于 Web 端来说更加的 “黑盒”，很多监控的 API 和 Web 端的区别是很大的，所以 Web 端的很多监控方式在小程序里面是不通用的（比如小程序一些特有的性能指标：启动耗时、JS 注入耗时、SetData 性能等），所以更加需要一套独立的全方位的监控体系。",-1),r=e("p",null,"微信小程序监控也是通过劫持微信官方抛出全局对象的方法，由于小程序的运行环境并没有window和document对象，它只暴露了一个wx全局对象，比如我要拦截页面的ajax请求，在web端重写window.XMLHttpRequest和fetch，在微信小程序端则需要重写wx.request。",-1),c=[i,d,r];function p(_,l,m,h,x,f){return a(),n("div",null,c)}const w=t(s,[["render",p]]);export{b as __pageData,w as default};
