import{_ as t,o as a,c as e,R as p,ah as r,ai as s,aj as o}from"./chunks/framework.C6deBHG_.js";const u=JSON.parse('{"title":"可视化平台","description":"","frontmatter":{},"headers":[],"relativePath":"web/platform.md","filePath":"web/platform.md","lastUpdated":1687321477000}'),_={name:"web/platform.md"},c=p('<h1 id="可视化平台" tabindex="-1">可视化平台 <a class="header-anchor" href="#可视化平台" aria-label="Permalink to &quot;可视化平台&quot;">​</a></h1><p>前端数据可视化展现前台，整体上只有两个页面，大盘页和详情页。</p><p>大盘页包括一个个业务的性能简图。每一个性能简图包括首屏时间、秒开率、采样 PV 数据。点击性能简图上的“进入详情”链接，就可以进入详情页。初次进入大盘页的时候，需要你登录并关注相关的业务，然后就可以在大盘首页看到相关的性能情况。 <img src="'+r+'" alt=""></p><p><img src="'+s+'" alt=""></p><p>同时，为了解秒开率不达标原因或者首屏时间变慢的细节在哪里，我们会给出页面加载瀑布流，前面数据处理阶段已经提到可以使用的数据（包括 DNS 查询、TCP链接、请求耗时、内容传输、资源解析、DOM 解析和资源加载的时间），套用 AntV （阿里巴巴集团的数据可视化方案）的瀑布流模板即可完成数据展现。 <img src="'+o+'" alt=""></p><p>那么，大盘页和详情页如何实现的呢？</p><p>首先是前端展示技术栈的选择，对应技术架构图中的淡黄色部分，因为这两个页面都属于 PC 端后台页面，主要给公司前端开发者使用，功能上更多是数据可视化展示，非常适合用 React 技术栈做开发。</p><p>为了更好实现首屏时间、秒开率和采用 PV 的功能效果，我们使用 AntdPro 的模板，相关的配套的数据可视化方案，我推荐 Antv，因为它能够满足我们在首屏时间、秒开率等性能指标的展示需求，用起来比较简单（开箱即用），功能灵活且扩展性强（比如秒开率部分，要自定义一些图形，能够较好满足）。</p><p>大盘页和详情页的数据展示效果比较丰富多样，相应的 CSS 代码逻辑就比较复杂，为了让 CSS代码更容易维护和扩展，CSS 方面可以选用 Less 框架。</p>',9),i=[c];function n(l,m,d,f,h,S){return a(),e("div",null,i)}const C=t(_,[["render",n]]);export{u as __pageData,C as default};
