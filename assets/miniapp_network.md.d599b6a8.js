import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.00fcd53e.js";const b=JSON.parse('{"title":"请求监控","description":"","frontmatter":{},"headers":[],"relativePath":"miniapp/network.md","filePath":"miniapp/network.md","lastUpdated":1688924012000}'),p={name:"miniapp/network.md"},e=l(`<h1 id="请求监控" tabindex="-1">请求监控 <a class="header-anchor" href="#请求监控" aria-label="Permalink to &quot;请求监控&quot;">​</a></h1><p>为了实现小程序网络请求的无痕埋点，我们需要通过劫持原始的网络请求方法，获取需要上报的数据，最后再执行原始的方法。</p><p>微信小程序监控也是通过劫持微信官方抛出全局对象的方法，由于小程序的运行环境并没有window和document对象，它只暴露了一个wx全局对象，比如我要拦截页面的ajax请求，在web端重写window.XMLHttpRequest和fetch，在微信小程序端则需要重写wx.request。</p><p>接口的监控统计，主要是请求参数、请求方式、状态，耗时等，也就是刚才所说的一些耗时，从请求发出一刹那的时间点，到请求拿到的数据推进，整个耗时情况</p><p>微信小程序常见的网络请求有：</p><ul><li>wx.request</li><li>wx.downloadFile</li><li>wx.uploadFile</li></ul><p>小程序不能直接分享到朋友圈，我们一般采用的方法是将小程序码绘制成canvas图片，然后保存到手机相册，再以图片的形式来分享朋友圈。上传图片或canvas上的元素时，采用wx.uploadFile方法来上传，然后绘制对应文件的tempFilePaths缓存，这时我们可以监控wx.uploadFile的fail回调函数。当我们要把绘制好的图片保存到相册时，使用wx.downloadFile方法，这里也是监控这个方法的fail回调函数。</p><p>故，原理示意如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">originRequest</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> wx.request;</span></span>
<span class="line"><span style="color:#E1E4E8;">Object.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(wx,</span><span style="color:#9ECBFF;">&#39;request&#39;</span><span style="color:#E1E4E8;">,{</span></span>
<span class="line"><span style="color:#E1E4E8;">    configurable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    enumerable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    writable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//执行监控代码</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//执行原始请求对象</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> originRequest.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">arguments</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">originRequest</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> wx.request;</span></span>
<span class="line"><span style="color:#24292E;">Object.</span><span style="color:#6F42C1;">defineProperty</span><span style="color:#24292E;">(wx,</span><span style="color:#032F62;">&#39;request&#39;</span><span style="color:#24292E;">,{</span></span>
<span class="line"><span style="color:#24292E;">    configurable: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    enumerable: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    writable: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//执行监控代码</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//执行原始请求对象</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> originRequest.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">arguments</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,9),o=[e];function r(t,c,i,E,y,u){return n(),a("div",null,o)}const m=s(p,[["render",r]]);export{b as __pageData,m as default};
